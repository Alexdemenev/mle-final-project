version: '3.8'

services:
  # Основной сервис рекомендаций
  recommendations:
    build: .
    ports:
      - "8000:8000"
    environment:
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: ["python", "-m", "uvicorn", "app.app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - .:/app
    depends_on:
      - events
      - features
    networks:
      - app-network

  # Сервис событий
  events:
    build: .
    ports:
      - "8001:8001"
    command: ["python", "-m", "uvicorn", "app.events_service:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
    volumes:
      - .:/app
    networks:
      - app-network

  # Сервис фичей
  features:
    build: .
    ports:
      - "8010:8010"
    environment:
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: ["python", "-m", "uvicorn", "app.features_service:app", "--host", "0.0.0.0", "--port", "8010", "--reload"]
    volumes:
      - .:/app
    networks:
      - app-network
      
  # запуск prometheus
  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    hostname: prometheus
    networks:
      - app-network

  # запуск grafana
  grafana:
    image: grafana/grafana
    env_file:
      - ./.env
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}

networks:
  app-network:
    driver: bridge
